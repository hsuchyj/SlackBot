{"version":3,"sources":["../src/app.ts"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["import { Request, Response } from \"express\";\nlet express = require(\"express\");\nlet exphbs  = require(\"express-handlebars\");\nlet favicon = require(\"serve-favicon\");\nlet http = require(\"http\");\nlet path = require(\"path\");\nlet config = require(\"config\");\nimport { Bot } from \"./Bot\";\nimport { VSTSTokenOAuth2API } from \"./apis/VSTSTokenOAuth2API\";\nimport * as teams from \"botbuilder-teams\";\nimport { LoadingTab } from \"./pages/LoadingTab\";\nimport { DefaultTab } from \"./pages/DefaultTab\";\nimport { AllCommandsTab } from \"./pages/AllCommandsTab\";\nimport { VSTSAuthTab } from \"./pages/VSTSAuthTab\";\nimport { VSTSAuthFlowStartPopUp } from \"./pages/VSTSAuthFlowStartPopUp\";\nimport { VSTSAuthFlowEndPopUp } from \"./pages/VSTSAuthFlowEndPopUp\";\nimport { ComposeExtensionSettingsPopUp } from \"./pages/ComposeExtensionSettingsPopUp\";\nimport { MongoDbBotStorage } from \"./storage/MongoDbBotStorage\";\nimport { MongoDbBotChannelStorage } from \"./storage/MongoDbBotChannelStorage\";\nimport { AADUserValidation } from \"./apis/AADUserValidation\";\nimport { ValidateAADToken } from \"./apis/ValidateAADToken\";\nimport { ManifestCreatorStart } from \"./pages/ManifestCreatorStart\";\nimport { ManifestCreatorEnd } from \"./pages/ManifestCreatorEnd\";\nimport * as builder from \"botbuilder\";\n\n// Configure instrumentation - tooling with Azure\n// let appInsights = require(\"applicationinsights\");\n// let instrumentationKey = config.get(\"app.instrumentationKey\");\n// if (instrumentationKey) {\n//     appInsights.setup(instrumentationKey).start();\n// }\n\nlet app = express();\n\napp.set(\"port\", process.env.PORT || 3978);\napp.use(express.static(path.join(__dirname, \"../../public\")));\napp.use(express.static(path.join(__dirname, \"./public\"))); // used for static dialogs\napp.use(favicon(path.join(__dirname, \"../../public/assets\", \"favicon.ico\")));\n\nlet handlebars = exphbs.create({\n    extname: \".hbs\",\n    helpers: {\n        appId: () => { return config.get(\"app.appId\"); },\n    },\n});\napp.engine(\"hbs\", handlebars.engine);\napp.set(\"view engine\", \"hbs\");\n\n// Tab and Popup urls\napp.get(\"/loading\", LoadingTab.getRequestHandler());\napp.get(\"/default\", DefaultTab.getRequestHandler());\napp.get(\"/allCommands\", AllCommandsTab.getRequestHandler());\napp.get(\"/vstsAuth\", VSTSAuthTab.getRequestHandler());\napp.get(\"/vstsAuthFlowStart\", VSTSAuthFlowStartPopUp.getRequestHandler());\napp.get(\"/vstsAuthFlowEnd\", VSTSAuthFlowEndPopUp.getRequestHandler());\napp.get(\"/composeExtensionSettings\", ComposeExtensionSettingsPopUp.getRequestHandler());\n\n// Tab authentication sample routes\napp.get(\"/tab-auth/simple\", (req, res) => { res.render(\"tab-auth/simple\"); });\napp.get(\"/tab-auth/simple-start\", (req, res) => { res.render(\"tab-auth/simple-start\"); });\napp.get(\"/tab-auth/simple-start-v2\", (req, res) => { res.render(\"tab-auth/simple-start-v2\"); });\napp.get(\"/tab-auth/simple-end\", (req, res) => { res.render(\"tab-auth/simple-end\"); });\napp.get(\"/tab-auth/silent\", (req, res) => { res.render(\"tab-auth/silent\"); });\napp.get(\"/tab-auth/silent-start\", (req, res) => { res.render(\"tab-auth/silent-start\"); });\napp.get(\"/tab-auth/silent-end\", (req, res) => { res.render(\"tab-auth/silent-end\"); });\n\napp.get(\"/\", ManifestCreatorStart.getRequestHandler());\napp.get(\"/createdManifest\", ManifestCreatorEnd.getRequestHandler());\n\n// Create Teams connector for the bot\nlet connector = new teams.TeamsChatConnector({\n    appId: config.get(\"bot.botId\"),\n    appPassword: config.get(\"bot.botPassword\"),\n});\n\n// Create storage for the bot\nlet channelStorage = null;\n// This defaults to using the botbuilder's in memory storage\nlet botStorage: builder.IBotStorage = new builder.MemoryBotStorage();\nif (config.get(\"channelStorageType\") === \"mongoDb\") {\n    channelStorage = new MongoDbBotChannelStorage(config.get(\"mongoDb.botStateCollection\"), config.get(\"mongoDb.connectionString\"));\n    botStorage = new MongoDbBotStorage(config.get(\"mongoDb.botStateCollection\"), config.get(\"mongoDb.connectionString\"));\n}\n\nlet botSettings = {\n    channelStorage: channelStorage,\n    storage: botStorage,\n};\n\nlet bot = new Bot(connector, botSettings);\n\n// Configure bot routes\napp.post(\"/api/messages\", connector.listen());\napp.get(\"/api/VSTSOauthCallback\", VSTSTokenOAuth2API.setUserAccessToken(bot));\napp.get(\"/api/validateUser\", AADUserValidation.validateUser(bot));\napp.get(\"/api/success\", AADUserValidation.success(bot));\napp.get(\"/api/validateToken\", ValidateAADToken.listen());\n\n// catch 404 and forward to error handler\n// app.use((req: Request, res: Response, next: Function) => {\n//     let err: any = new Error(\"Not Found\");\n//     err.status = 404;\n//     next(err);\n// });\n\n// error handlers\n\n// development error handler\n// will print stacktrace\nif (app.get(\"env\") === \"development\") {\n    app.use(function(err: any, req: Request, res: Response, next: Function): void {\n        res.status(err.status || 500);\n        res.render(\"error\", {\n            message: err.message,\n            error: err,\n        });\n    });\n}\n\n// production error handler\n// no stacktraces leaked to user\napp.use(function(err: any, req: Request, res: Response, next: Function): void {\n    res.status(err.status || 500);\n    res.render(\"error\", {\n        message: err.message,\n        error: {},\n    });\n});\n\nlet baseUri = config.get(\"app.baseUri\");\nlet validBaseUri = !(/^https:\\/\\/localhost|^http:\\/\\/localhost|^localhost/i.test(baseUri));\n\nhttp.createServer(app).listen(app.get(\"port\"), function (): void {\n    console.log(\"\"); // for blank line for readability\n    console.log(\"Express server listening on port \" + app.get(\"port\"));\n    console.log(\"\"); // for blank line for readability\n    console.log(\"Server running successfully\");\n    // only return message to register in Bot Framework if it is set to something other than your locally running instance\n    if (validBaseUri) {\n        console.log(\"Endpoint to register in Bot Framework:\");\n        console.log(baseUri + \"/api/messages\");\n    }\n});\n\nmodule.exports = app;\n"],"sourceRoot":"/app/build"}