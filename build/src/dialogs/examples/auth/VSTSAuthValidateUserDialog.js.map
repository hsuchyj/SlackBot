{"version":3,"sources":["../src/dialogs/examples/auth/VSTSAuthValidateUserDialog.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,sCAAsC;AACtC,4EAAyE;AACzE,wDAAqD;AACrD,gEAA6D;AAC7D,mDAAiD;AAEjD,gCAAwC,SAAQ,yCAAmB;IAEvD,MAAM,CAAO,yBAAyB,CAAC,OAAwB,EAAE,IAAuC,EAAE,IAAkD;;YAChK,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,gBAAO,CAAC,4BAA4B,CAAC,CAAC;QACxE,CAAC;KAAA;IAEO,MAAM,CAAO,mBAAmB,CAAC,OAAwB,EAAE,IAAuC,EAAE,IAAkD;;YAC1J,IAAI,iBAAiB,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YAC7C,IAAI,gBAAgB,GAAG,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,sBAAsB,CAAC;YACxE,IAAI,iBAAiB,KAAK,gBAAgB,EAAE;gBACxC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;gBAC7C,OAAO,CAAC,IAAI,CAAC,gBAAO,CAAC,sBAAsB,CAAC,CAAC;gBAC7C,OAAO,CAAC,SAAS,EAAE,CAAC;aACvB;iBAAM;gBACH,OAAO,CAAC,IAAI,CAAC,gBAAO,CAAC,qBAAqB,CAAC,CAAC;gBAC5C,OAAO,CAAC,WAAW,CAAC,qBAAS,CAAC,iBAAiB,CAAC,CAAC;aACpD;QACL,CAAC;KAAA;IAED,YACI,GAAyB;QAEzB,KAAK,CAAC,GAAG,EACL,qBAAS,CAAC,4BAA4B,EACtC,6BAAa,CAAC,qCAAqC,EACnD;YACI,0BAA0B,CAAC,yBAAyB;YACpD,0BAA0B,CAAC,mBAAmB;SACjD,CACJ,CAAC;IACN,CAAC;CACJ;AA/BD,gEA+BC","file":"VSTSAuthValidateUserDialog.js","sourcesContent":["import * as builder from \"botbuilder\";\nimport { TriggerActionDialog } from \"../../../utils/TriggerActionDialog\";\nimport { DialogIds } from \"../../../utils/DialogIds\";\nimport { DialogMatches } from \"../../../utils/DialogMatches\";\nimport { Strings } from \"../../../locale/locale\";\n\nexport class VSTSAuthValidateUserDialog extends TriggerActionDialog {\n\n    private static async promptForValidationNumber(session: builder.Session, args?: any | builder.IDialogResult<any>, next?: (args?: builder.IDialogResult<any>) => void): Promise<void> {\n        builder.Prompts.text(session, Strings.prompt_for_validation_number);\n    }\n\n    private static async validateInputNumber(session: builder.Session, args?: any | builder.IDialogResult<any>, next?: (args?: builder.IDialogResult<any>) => void): Promise<void> {\n        let userEnteredNumber = args.response.trim();\n        let validationNumber = session.userData.vstsAuth.randomValidationNumber;\n        if (userEnteredNumber === validationNumber) {\n            session.userData.vstsAuth.isValidated = true;\n            session.send(Strings.successfully_logged_in);\n            session.endDialog();\n        } else {\n            session.send(Strings.error_validating_user);\n            session.beginDialog(DialogIds.VSTSLogInDialogId);\n        }\n    }\n\n    constructor(\n        bot: builder.UniversalBot,\n    ) {\n        super(bot,\n            DialogIds.VSTSAuthValidateUserDialogId,\n            DialogMatches.VSTS_Auth_Validate_User_Dialog_Intent,\n            [\n                VSTSAuthValidateUserDialog.promptForValidationNumber,\n                VSTSAuthValidateUserDialog.validateInputNumber,\n            ],\n        );\n    }\n}\n"],"sourceRoot":"/app/build"}