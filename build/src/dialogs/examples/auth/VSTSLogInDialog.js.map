{"version":3,"sources":["../src/dialogs/examples/auth/VSTSLogInDialog.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,sCAAsC;AACtC,4EAAyE;AACzE,wDAAqD;AACrD,gEAA6D;AAC7D,yEAAyE;AACzE,mDAAiD;AACjD,iCAAiC;AACjC,2CAA2C;AAE3C,qBAA6B,SAAQ,yCAAmB;IAE5C,MAAM,CAAO,gBAAgB,CAAC,OAAwB,EAAE,IAAuC,EAAE,IAAkD;;YACvJ,0DAA0D;YAE1D,gDAAgD;YAChD,eAAe;YACf,2BAA2B;YAC3B,eAAe;YACf,QAAQ;YACR,mCAAmC;YAEnC,IAAI,OAAO,GAAG,EAAE,CAAC;YACjB,2EAA2E;YAC3E,IAAI,KAAK,GAAG,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YAC5C,IAAI,iBAAiB,GAAG,aAAa,CAAC,CAAC,oCAAoC;YAC3E,IAAI,WAAW,GAAG,WAAW,CAAC,SAAS,CACnC;gBACI,gBAAgB,EAAE,MAAM;gBACxB,gDAAgD;gBAChD,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,WAAW,EAAE,UAAU,EAAE,CAAC;aACvD,CACJ,CAAC;YACF,IAAI,qBAAqB,GAAG,uCAAuC,GAAG,KAAK,GAAG,GAAG,GAAG,iBAAiB,GAAG,GAAG,GAAG,WAAW,CAAC;YAC1H,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,EAAE,qBAAqB,EAAE,gBAAO,CAAC,OAAO,CAAC,CAAC,CAAC;YAE1F,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC;iBAC3C,KAAK,CAAC,gBAAO,CAAC,aAAa,CAAC;iBAC5B,QAAQ,CAAC,gBAAO,CAAC,gBAAgB,CAAC;iBAClC,IAAI,CAAC,gBAAO,CAAC,YAAY,CAAC;iBAC1B,MAAM,CAAC;gBACJ,IAAI,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC;qBACzB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,aAAa,CAAC,GAAG,6BAA6B,CAAC;qBAC9D,GAAG,CAAC,gBAAO,CAAC,WAAW,CAAC;aAChC,CAAC;iBACD,OAAO,CAAC,OAAO,CAAC,CAAC;YAEtB,0EAA0E;YAC1E,6EAA6E;YAE7E,OAAO,CAAC,SAAS,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;QAC3E,CAAC;KAAA;IAED,YACI,GAAyB;QAEzB,KAAK,CAAC,GAAG,EACL,qBAAS,CAAC,iBAAiB,EAC3B,6BAAa,CAAC,oBAAoB,EAClC,eAAe,CAAC,gBAAgB,CACnC,CAAC;IACN,CAAC;CACJ;AApDD,0CAoDC","file":"VSTSLogInDialog.js","sourcesContent":["import * as builder from \"botbuilder\";\nimport { TriggerActionDialog } from \"../../../utils/TriggerActionDialog\";\nimport { DialogIds } from \"../../../utils/DialogIds\";\nimport { DialogMatches } from \"../../../utils/DialogMatches\";\n// import { VSTSTokenOAuth2API } from \"../../../apis/VSTSTokenOAuth2API\";\nimport { Strings } from \"../../../locale/locale\";\nimport * as config from \"config\";\nimport * as querystring from \"querystring\";\n\nexport class VSTSLogInDialog extends TriggerActionDialog {\n\n    private static async sendAuthorizeMsg(session: builder.Session, args?: any | builder.IDialogResult<any>, next?: (args?: builder.IDialogResult<any>) => void): Promise<void> {\n        // let url = VSTSTokenOAuth2API.getUserAuthorizationURL();\n\n        // let newCard = new builder.SigninCard(session)\n        //     .button(\n        //         Strings.sign_in,\n        //         url,\n        //     )\n        //     .text(Strings.default_text);\n\n        let buttons = [];\n        // buttons.push(builder.CardAction.openUrl(session, url, Strings.sign_in));\n        let botId = \"28:\" + config.get(\"bot.botId\");\n        let staticTabEntityId = \"1on1test123\"; // this comes from the manifest file\n        let queryParams = querystring.stringify(\n            {\n                conversationType: \"chat\",\n                // context: \"{\\\"subEntityId\\\":\\\"allCommands\\\"}\",\n                context: JSON.stringify({ subEntityId: \"vstsAuth\" }),\n            },\n        );\n        let staticTabHardCodedUrl = \"https://teams.microsoft.com/l/entity/\" + botId + \"/\" + staticTabEntityId + \"?\" + queryParams;\n        buttons.push(builder.CardAction.openUrl(session, staticTabHardCodedUrl, Strings.sign_in));\n\n        let newCard = new builder.ThumbnailCard(session)\n            .title(Strings.default_title)\n            .subtitle(Strings.default_subtitle)\n            .text(Strings.default_text)\n            .images([\n                new builder.CardImage(session)\n                    .url(config.get(\"app.baseUri\") + \"/assets/computer_person.jpg\")\n                    .alt(Strings.img_default),\n            ])\n            .buttons(buttons);\n\n        // Just for development to see what the session.message.address values are\n        // session.send(encodeURIComponent(JSON.stringify(session.message.address)));\n\n        session.endDialog(new builder.Message(session).addAttachment(newCard));\n    }\n\n    constructor(\n        bot: builder.UniversalBot,\n    ) {\n        super(bot,\n            DialogIds.VSTSLogInDialogId,\n            DialogMatches.VSTSLogInDialogMatch,\n            VSTSLogInDialog.sendAuthorizeMsg,\n        );\n    }\n}\n"],"sourceRoot":"/app/build"}