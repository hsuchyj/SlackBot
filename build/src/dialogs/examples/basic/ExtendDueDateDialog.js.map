{"version":3,"sources":["../src/dialogs/examples/basic/ExtendDueDateDialog.ts"],"names":[],"mappings":"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","file":"ExtendDueDateDialog.js","sourcesContent":["import * as builder from \"botbuilder\";\nimport { TriggerActionDialog } from \"../../../utils/TriggerActionDialog\";\nimport { DialogIds } from \"../../../utils/DialogIds\";\nimport { DialogMatches } from \"../../../utils/DialogMatches\";\nimport { Strings } from \"../../../locale/locale\";\n//import { request } from 'http';\n\nexport class ExtendDueDateDialog extends TriggerActionDialog \n{\n    //Asks for asssignment name in teams\n    private static async step1(session: builder.Session, args?: any | builder.IDialogResult<any>, next?: (args?: builder.IDialogResult<any>) => void): Promise<void> \n    {\n        builder.Prompts.text(session, \"What is the assignment name?\");\n    }\n\n    //stores assignment name, makes get request to determine id for PUT request, and asks for days extension\n    private static async step2(session: builder.Session, args?: any | builder.IDialogResult<any>, next?: (args?: builder.IDialogResult<any>) => void): Promise<void> \n    {\n        var aName = args.response;\n        var rp = require('request-promise');\n        var options = {\n            uri: 'https://canvas.instructure.com/api/v1/courses/1845971/assignments',\n            headers: {\n                'User-Agent': 'Request-Promise',\n                \"Authorization\": \"Bearer 7~6a2J9SqGLbvKIzXUa2tGjnD2kkCpYWSsxWA8cc695YgTSVKhLR0fg5khbvuXiHs3\"\n            },\n            json: true\n        };\n\n        await rp(options).then(function (repos) {\n          //console.log(repos);\n            repos.forEach(function(assn) \n            {\n              if(assn.name == aName)\n              {\n                session.userData.assnID = assn.id;\n                session.userData.oldDate = assn.due_at\n              }\n            });\n      }).catch(function (err) {\n          console.log(err);\n      });\n      builder.Prompts.number(session, \"How many days would you like to extend the assignment?\");\n    }\n\n    private static async step3(session: builder.Session, args?: any | builder.IDialogResult<any>, next?: (args?: builder.IDialogResult<any>) => void): Promise<void> \n    {\n        session.userData.assnDays = args.response;\n        builder.Prompts.text(session, \"Type \\'All\\' or Name the student.\");\n    }\n    \n    //Send PUT request that updates old date by days entered\n    private static async step4(session: builder.Session, args?: any | builder.IDialogResult<any>, next?: (args?: builder.IDialogResult<any>) => void): Promise<void> {\n      \n        session.userData.assnGroup = args.response;\n        var aDays = session.userData.assnDays;\n        var aGroup = session.userData.assnGroup;\n        var aID = session.userData.assnID;\n        var aOD = new Date(session.userData.oldDate);\n        aOD.setDate(aOD.getDate() + parseInt(aDays,10));\n        var sDate = aOD.toISOString();\n        \n        var rp = require('request-promise');\n        var options;\n        if(aGroup == \"All\")\n        {\n            options = {\n                method: 'PUT',\n                uri: 'https://canvas.instructure.com/api/v1/courses/1845971/assignments/'+aID,\n                body:\n                {\n                    \"assignment\": \n                    {\n                      \"due_at\": sDate\n                    }\n                },\n                headers: {\n                    'User-Agent': 'Request-Promise',\n                    \"Authorization\": \"Bearer 7~6a2J9SqGLbvKIzXUa2tGjnD2kkCpYWSsxWA8cc695YgTSVKhLR0fg5khbvuXiHs3\"\n                },\n                json: true\n            };\n        }\n        else\n        {  \n            //Make GET request to find student ID based on name entered\n            var stuID;\n            var stu = {\n            uri: 'https://canvas.instructure.com/api/v1/courses/1845971/users',\n            headers: {\n                'User-Agent': 'Request-Promise',\n                \"Authorization\": \"Bearer 7~6a2J9SqGLbvKIzXUa2tGjnD2kkCpYWSsxWA8cc695YgTSVKhLR0fg5khbvuXiHs3\"\n            },\n            json: true\n            };\n\n              await rp(stu).then(function (repos) {\n                //console.log(repos);\n                  repos.forEach(function(data) \n                  {\n                    if(data.name == aGroup)\n                    {\n                        stuID = data.id;\n                    }\n                  });\n            }).catch(function (err) {\n                console.log(err);\n            });\n          \n            options = {\n                method: 'POST',\n                uri: 'https://canvas.instructure.com/api/v1/courses/1845971/assignments/'+aID+'/overrides',\n                body:\n                {\n                    \"assignment_override\": \n                    {\n                      \"due_at\": sDate,\n                      \"student_ids\":[\n                        stuID\n                      ]\n                    }\n                },\n                headers: {\n                    'User-Agent': 'Request-Promise',\n                    \"Authorization\": \"Bearer 7~6a2J9SqGLbvKIzXUa2tGjnD2kkCpYWSsxWA8cc695YgTSVKhLR0fg5khbvuXiHs3\"\n                },\n                json: true\n            };\n        }\n        \n        await rp(options).then(function (repos) {\n          console.log(repos);\n      }).catch(function (err) {\n          console.log(err);\n      });\n\n        builder.Prompts.text(session, \"Due date has been updated.\");\n    }\n    \n    constructor(\n        bot: builder.UniversalBot,\n    ) {\n        super(bot,\n            DialogIds.ExtendDueDateDialogId,\n            DialogMatches.ExtendDueDateDialogMatch,\n            [\n              ExtendDueDateDialog.step1,\n              ExtendDueDateDialog.step2,\n              ExtendDueDateDialog.step3,\n              ExtendDueDateDialog.step4,\n            ],\n        );\n    }\n}\n"],"sourceRoot":"/app/build"}