{"version":3,"sources":["../src/dialogs/examples/teams/NotifyDialog.ts"],"names":[],"mappings":";;;;;;;;;;AACA,4EAAyE;AACzE,wDAAqD;AACrD,gEAA6D;AAC7D,mDAAiD;AACjD,0CAA0C;AAC1C,4DAAkE;AAElE,kBAA0B,SAAQ,yCAAmB;IACzC,MAAM,CAAO,KAAK,CAAC,OAAwB,EAAE,IAAuC,EAAE,IAAkD;;YAC5I,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,KAAK,SAAS,EACxC;gBACI,IAAI,kCAAoB,CAAC,OAAO,CAAC,OAAO,CAAC,EACzC;oBACI,2BAA2B;oBAC3B,OAAO,CAAC,IAAI,CAAC,gBAAO,CAAC,eAAe,CAAC,CAAC;oBACtC,OAAO,CAAC,SAAS,EAAE,CAAC;iBACvB;qBAED;oBACI,oDAAoD;oBACpD,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,gBAAO,CAAC,UAAU,CAAC,CAAC;oBACnE,IAAI,SAAS,GAAG,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC;oBAC7C,IAAI,YAAY,GAAG,GAAG,CAAC,WAAW,CAAC;wBAC/B,SAAS,EAAG,SAAS;qBACxB,CAAC,CAAC;oBACH,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;oBAC3B,OAAO,CAAC,SAAS,EAAE,CAAC;iBACvB;aACJ;iBACI,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,KAAK,UAAU,EAC9C;gBACI,OAAO,CAAC,IAAI,CAAC,gBAAO,CAAC,eAAe,CAAC,CAAC;gBACtC,OAAO,CAAC,SAAS,EAAE,CAAC;aACvB;QACL,CAAC;KAAA;IAED,YACI,GAAyB;QAEzB,KAAK,CAAC,GAAG,EACL,qBAAS,CAAC,cAAc,EACxB,6BAAa,CAAC,iBAAiB,EAC/B,YAAY,CAAC,KAAK,CACrB,CAAC;IACN,CAAC;CACJ;AAtCD,oCAsCC","file":"NotifyDialog.js","sourcesContent":["import * as builder from \"botbuilder\";\nimport { TriggerActionDialog } from \"../../../utils/TriggerActionDialog\";\nimport { DialogIds } from \"../../../utils/DialogIds\";\nimport { DialogMatches } from \"../../../utils/DialogMatches\";\nimport { Strings } from \"../../../locale/locale\";\nimport * as teams from \"botbuilder-teams\";\nimport { isMessageFromChannel } from \"../../../utils/DialogUtils\";\n\nexport class NotifyDialog extends TriggerActionDialog {\n    private static async step1(session: builder.Session, args?: any | builder.IDialogResult<any>, next?: (args?: builder.IDialogResult<any>) => void): Promise<void> {\n        if (session.message.source === \"msteams\")\n        {\n            if (isMessageFromChannel(session.message))\n            {\n                // it won't work in channel\n                session.send(Strings.notifyerror_msg);\n                session.endDialog();\n            }\n            else\n            {\n                // Actvity notications will only work in 1 to 1 chat\n                let msg = new teams.TeamsMessage(session).text(Strings.notify_msg);\n                let alertFlag = teams.TeamsMessage.alertFlag;\n                let notification = msg.sourceEvent({\n                    \"msteams\" : alertFlag,\n                });\n                session.send(notification);\n                session.endDialog();\n            }\n        }\n        else if (session.message.source === \"emulator\")\n        {\n            session.send(Strings.notifyerror_msg);\n            session.endDialog();\n        }\n    }\n\n    constructor(\n        bot: builder.UniversalBot,\n    ) {\n        super(bot,\n            DialogIds.NotifyDialogId,\n            DialogMatches.NotifyDialogMatch,\n            NotifyDialog.step1,\n        );\n    }\n}\n"],"sourceRoot":"/app/build"}