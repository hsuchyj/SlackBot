{"version":3,"sources":["../src/dialogs/examples/teams/UpdateCardMsgSetupDialog.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,sCAAsC;AACtC,4EAAyE;AACzE,wDAAqD;AACrD,gEAA6D;AAC7D,mDAAiD;AACjD,iCAAiC;AAEjC,8BAAsC,SAAQ,yCAAmB;IAC7D,0FAA0F;IAC1F,yFAAyF;IACjF,MAAM,CAAO,gBAAgB,CAAC,OAAwB,EAAE,IAAuC,EAAE,IAAkD;;YACvJ,IAAI,iBAAiB,GAAG,CAAC,CAAC;YAE1B,IAAI,sBAAsB,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,CAAC,CAAC;YACrF,IAAI,iBAAiB,GAAG,OAAO,CAAC,UAAU,CAAC,WAAW,CAAC,OAAO,EAAE,sBAAsB,CAAC;iBAClF,WAAW,CAAC,gBAAO,CAAC,+BAA+B,CAAC;iBACpD,KAAK,CAAC,gBAAO,CAAC,kBAAkB,CAAC;iBACjC,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,uFAAuF;YAEzH,IAAI,IAAI,GAAG,IAAI,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC;iBACnC,KAAK,CAAC,gBAAO,CAAC,aAAa,CAAC;iBAC5B,QAAQ,CAAC,gBAAO,CAAC,gBAAgB,CAAC;iBAClC,IAAI,CAAC,gBAAO,CAAC,YAAY,CAAC;iBAC1B,MAAM,CAAC;gBACJ,IAAI,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC;qBACzB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,aAAa,CAAC,GAAG,6BAA6B,CAAC;qBAC9D,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,gBAAO,CAAC,WAAW,CAAC,CAAC;aAC7C,CAAC;iBACL,OAAO,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;YAElC,IAAI,GAAG,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC;iBACjC,aAAa,CAAC,IAAI,CAAC,CAAC;YAEzB,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QAC3B,CAAC;KAAA;IAED,YACI,GAAyB;QAEzB,KAAK,CAAC,GAAG,EACL,qBAAS,CAAC,0BAA0B,EACpC,6BAAa,CAAC,6BAA6B,EAC3C,wBAAwB,CAAC,gBAAgB,CAC5C,CAAC;IACN,CAAC;CACJ;AAtCD,4DAsCC","file":"UpdateCardMsgSetupDialog.js","sourcesContent":["import * as builder from \"botbuilder\";\nimport { TriggerActionDialog } from \"../../../utils/TriggerActionDialog\";\nimport { DialogIds } from \"../../../utils/DialogIds\";\nimport { DialogMatches } from \"../../../utils/DialogMatches\";\nimport { Strings } from \"../../../locale/locale\";\nimport * as config from \"config\";\n\nexport class UpdateCardMsgSetupDialog extends TriggerActionDialog {\n    // setup the card message and then user can update the card using below update dialog file\n    // microsoft-teams-sample-complete-node\\src\\dialogs\\examples\\teams\\UpdateCardMsgDialog.ts\n    private static async setupCardMessage(session: builder.Session, args?: any | builder.IDialogResult<any>, next?: (args?: builder.IDialogResult<any>) => void): Promise<void> {\n        let updateCardCounter = 0;\n\n        let messageBackButtonValue = JSON.stringify({ updateCounterKey: updateCardCounter });\n        let messageBackButton = builder.CardAction.messageBack(session, messageBackButtonValue)\n            .displayText(Strings.messageBack_button_display_text)\n            .title(Strings.update_card_button)\n            .text(\"update card message\"); // This must be a string that routes to UpdateCardMsgDialog, which handles card updates\n\n        let card = new builder.HeroCard(session)\n            .title(Strings.default_title)\n            .subtitle(Strings.default_subtitle)\n            .text(Strings.default_text)\n            .images([\n                new builder.CardImage(session)\n                    .url(config.get(\"app.baseUri\") + \"/assets/computer_person.jpg\")\n                    .alt(session.gettext(Strings.img_default)),\n                ])\n            .buttons([messageBackButton]);\n\n        let msg = new builder.Message(session)\n            .addAttachment(card);\n\n        session.endDialog(msg);\n    }\n\n    constructor(\n        bot: builder.UniversalBot,\n    ) {\n        super(bot,\n            DialogIds.UpdateCardMsgSetupDialogId,\n            DialogMatches.UpdateCardMsgSetupDialogMatch,\n            UpdateCardMsgSetupDialog.setupCardMessage,\n        );\n    }\n}\n"],"sourceRoot":"/app/build"}