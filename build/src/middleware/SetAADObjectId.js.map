{"version":3,"sources":["../src/middleware/SetAADObjectId.ts"],"names":[],"mappings":";;;;;;;;;;AACA,oDAAoD;AAEpD,oFAAiF;AAEjF;IAAA;QAEoB,eAAU,GAAG,CAAC,OAAwB,EAAE,IAAc,EAAQ,EAAE;YAC5E,IAAI,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;YAE9B,uEAAuE;YACvE,YAAY;YACZ,uBAAuB;YACvB,0BAA0B;YAC1B,yCAAyC;YACzC,KAAK;YACL,+CAA+C;YAC/C,4BAA4B;YAC5B,UAAU;YAEV,IAAI,OAAO,EAAE;gBACT,iEAAiE;gBACjE,IAAI,OAAO,CAAC,QAAQ,CAAC,WAAW,EAAE;oBAC9B,qBAAqB;oBACrB,oCAAoC;oBACpC,IAAI,EAAE,CAAC;iBACV;qBAAM;oBACH,yCAAyC;oBACzC,IAAI,kBAAkB,GAAI,OAAO,CAAC,SAAsC,CAAC;oBACzE,IAAI,UAAU,GAAI,OAAO,CAAC,OAAO,CAAC,OAAyC,CAAC;oBAC5E,IAAI,aAAa,GAAG,UAAU,CAAC,UAAU,CAAC;oBAE1C,sEAAsE;oBACtE,IAAI,MAAM,GAAG,IAAI,CAAC;oBAClB,IAAI,WAAW,CAAC,oBAAoB,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;wBACnD,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC;qBAChD;yBAAM;wBACH,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,CAAC;qBACpD;oBAED,kBAAkB,CAAC,YAAY,CAC3B,aAAa,EACb,MAAM,EACN,CAAO,GAAG,EAAE,MAAM,EAAE,EAAE;wBAClB,IAAI,CAAC,GAAG,EAAE;4BACN,uEAAuE;4BACvE,IAAI,WAAW,GAAG,IAAI,CAAC;4BACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gCACpC,IAAI,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;gCACrB,IAAI,IAAI,CAAC,EAAE,KAAK,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE;oCAC7C,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC;oCAC5B,MAAM;iCACT;6BACJ;4BACD,IAAI,WAAW,EAAE;gCACb,OAAO,CAAC,QAAQ,CAAC,WAAW,GAAG,WAAW,CAAC;gCAE3C,IAAI,UAAU,GAAG,MAAM,qDAAyB,CAAC,gBAAgB,EAAE,CAAC;gCACpE,IAAI,KAAK,GAAG,MAAM,UAAU,CAAC,qBAAqB,CAAC,WAAW,CAAC,CAAC;gCAEhE,IAAI,WAAW,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;oCAC/B,kEAAkE;oCAClE,gDAAgD;iCACnD;qCAAM;oCACH,mFAAmF;oCACnF,0BAA0B;oCAC1B,IAAI,QAAQ,GAAG;wCACX,KAAK,EAAE,KAAK,CAAC,SAAS;wCACtB,YAAY,EAAE,KAAK,CAAC,gBAAgB;qCACvC,CAAC;oCACF,OAAO,CAAC,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC;oCACrC,mBAAmB;oCACnB,MAAM,UAAU,CAAC,wBAAwB,CAAC,WAAW,CAAC,CAAC;iCAC1D;gCACD,MAAM,UAAU,CAAC,KAAK,EAAE,CAAC;6BAC5B;yBACJ;6BAAM;4BACH,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;yBACtB;wBACD,IAAI,EAAE,CAAC;oBACX,CAAC,CAAA,CACJ,CAAC;oBAEF,2BAA2B;oBAC3B,gEAAgE;iBACnE;aACJ;QACL,CAAC,CAAA;IACL,CAAC;CAAA;AAnFD,wCAmFC","file":"SetAADObjectId.js","sourcesContent":["import * as builder from \"botbuilder\";\nimport * as DialogUtils from \"../utils/DialogUtils\";\nimport * as teams from \"botbuilder-teams\";\nimport { MongoDbAADObjectIdStorage } from \"../storage/MongoDbAADObjectIdStorage\";\n\nexport class SetAADObjectId implements builder.IMiddlewareMap {\n\n    public readonly botbuilder = (session: builder.Session, next: Function): void => {\n        let message = session.message;\n\n        // let botStorage = await MongoDbAADObjectIdStorage.createConnection();\n        // let x = {\n        //     aadObjectId: \"\",\n        //     vstsToken: \"token\",\n        //     vstsRefreshToken: \"refresh_token\",\n        // };\n        // await botStorage.saveTokensByAADObjectId(x);\n        // await botStorage.close();\n        // next();\n\n        if (message) {\n            // console.log(\"User data: \" + JSON.stringify(session.userData));\n            if (session.userData.aadObjectId) {\n                // Great! Do nothing.\n                // console.log(\"Did nothing - woo\");\n                next();\n            } else {\n                // casting to keep away typescript errors\n                let teamsChatConnector = (session.connector as teams.TeamsChatConnector);\n                let msgAddress = (session.message.address as builder.IChatConnectorAddress);\n                let msgServiceUrl = msgAddress.serviceUrl;\n\n                // if a message is from a channel, use the team.id to fetch the roster\n                let currId = null;\n                if (DialogUtils.isMessageFromChannel(session.message)) {\n                    currId = session.message.sourceEvent.team.id;\n                } else {\n                    currId = session.message.address.conversation.id;\n                }\n\n                teamsChatConnector.fetchMembers(\n                    msgServiceUrl,\n                    currId,\n                    async (err, result) => {\n                        if (!err) {\n                            // get data for _id:aad_id - if doesn't exist, just add aad to userData\n                            let aadObjectId = null;\n                            for (let i = 0; i < result.length; i++) {\n                                let curr = result[i];\n                                if (curr.id === session.message.address.user.id) {\n                                    aadObjectId = curr.objectId;\n                                    break;\n                                }\n                            }\n                            if (aadObjectId) {\n                                session.userData.aadObjectId = aadObjectId;\n\n                                let botStorage = await MongoDbAADObjectIdStorage.createConnection();\n                                let entry = await botStorage.getEntryByAADObjectId(aadObjectId);\n\n                                if (DialogUtils.isEmptyObj(entry)) {\n                                    // no response from database so there is no entry from a tab first\n                                    // console.log(\"Should have just saved AAD ID\");\n                                } else {\n                                    // console.log(\"Should have saved AAD ID, tokens, and deleted aadObjectId: entry\");\n                                    // write data to user data\n                                    let vstsAuth = {\n                                        token: entry.vstsToken,\n                                        refreshToken: entry.vstsRefreshToken,\n                                    };\n                                    session.userData.vstsAuth = vstsAuth;\n                                    // delete AAD entry\n                                    await botStorage.deleteEntryByAADObjectId(aadObjectId);\n                                }\n                                await botStorage.close();\n                            }\n                        } else {\n                            session.error(err);\n                        }\n                        next();\n                    },\n                );\n\n                // see if just addId exists\n                // if it doesn't then just add addId to current session.userData\n            }\n        }\n    }\n}\n"],"sourceRoot":"/app/build"}