{"version":3,"sources":["../src/pages/ManifestCreatorStart.ts"],"names":[],"mappings":";;;;;;;;;;AACA,iCAAiC;AAEjC;IAEW,MAAM,CAAC,iBAAiB;QAC3B,OAAO,UAAgB,GAAQ,EAAE,GAAQ,EAAE,IAAS;;gBAChD,IAAI,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;gBACxC,kEAAkE;gBAClE,IAAI,YAAY,GAAG,OAAO,IAAI,CAAC,CAAC,sDAAsD,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBACtG,IAAI,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gBACpC,iGAAiG;gBACjG,IAAI,UAAU,GAAG,KAAK,IAAI,KAAK,KAAK,eAAe,CAAC;gBAEpD,GAAG,CAAC,MAAM,CAAC,uCAAuC,EAAE;oBAChD,OAAO,EAAE,OAAO;oBAChB,YAAY,EAAE,YAAY;oBAC1B,KAAK,EAAE,KAAK;oBACZ,UAAU,EAAE,UAAU;oBACtB,qBAAqB,EAAE,YAAY,IAAI,UAAU;iBACpD,CAAC,CAAC;YACP,CAAC;SAAA,CAAC;IACN,CAAC;CACJ;AApBD,oDAoBC","file":"ManifestCreatorStart.js","sourcesContent":["import * as express from \"express\";\nimport * as config from \"config\";\n\nexport class ManifestCreatorStart {\n\n    public static getRequestHandler(): express.RequestHandler {\n        return async function (req: any, res: any, next: any): Promise<void> {\n            let baseUri = config.get(\"app.baseUri\");\n            // a valid base uri cannot simply be your locally running instance\n            let validBaseUri = baseUri && !(/^https:\\/\\/localhost|^http:\\/\\/localhost|^localhost/i.test(baseUri));\n            let appId = config.get(\"bot.botId\");\n            // this is to check against the default value I put in the env variable for the Glitch deployment\n            let validAppId = appId && appId !== \"NeedToSetThis\";\n\n            res.render(\"manifest-creator/manifestCreatorStart\", {\n                baseUri: baseUri,\n                validBaseUri: validBaseUri,\n                appId: appId,\n                validAppId: validAppId,\n                createManifestEnabled: validBaseUri && validAppId,\n            });\n        };\n    }\n}\n"],"sourceRoot":"/app/build"}