{"version":3,"sources":["../src/utils/ChannelData.ts"],"names":[],"mappings":";;;;;;;;;;AAEA,6CAA6C;AAE7C,sCAAsC;AACtC;IAEI,gDAAgD;IACzC,MAAM,CAAC,GAAG,CAAC,OAAwB;QACtC,OAAQ,OAAe,CAAC,WAAW,CAAC;IACxC,CAAC;IAED,iDAAiD;IAC1C,MAAM,CAAO,aAAa,CAAC,OAAwB,EAAE,OAA2B;;YACnF,IAAI,OAAO,EAAE;gBACT,IAAI,MAAM,GAAG,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBACpD,IAAI,SAAS,GAAG,WAAW,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBAC1D,IAAI,kBAAkB,GAAI,OAAkC,CAAC;gBAC7D,IAAI,SAAS,EAAE;oBACX,IAAI,OAAO,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC;oBACvD,MAAM,OAAO,CAAC,QAAQ,CAAC,OAAO,EAAE,kBAAkB,CAAC,CAAC;iBACvD;qBAAM;oBACH,0CAA0C;oBAC1C,uFAAuF;iBAC1F;aACJ;QACL,CAAC;KAAA;CAEJ;AAvBD,kCAuBC","file":"ChannelData.js","sourcesContent":["import * as builder from \"botbuilder\";\nimport { IBotChannelStorageData, IBotChannelStorage } from \"../storage/BotChannelStorage\";\nimport * as DialogUtils from \"./DialogUtils\";\n\n// Helper class to manage channel data\nexport class ChannelData  {\n\n    // Gets the channel data from the Session object\n    public static get(session: builder.Session): any {\n        return (session as any).channelData;\n    }\n\n    // Saves the channel data to channel data storage\n    public static async saveToStorage(session: builder.Session, storage: IBotChannelStorage): Promise<void> {\n        if (storage) {\n            let teamId = DialogUtils.getTeamId(session.message);\n            let channelId = DialogUtils.getChannelId(session.message);\n            let channelStorageData = (session as IBotChannelStorageData);\n            if (channelId) {\n                let context = { teamId: teamId, channelId: channelId };\n                await storage.saveData(context, channelStorageData);\n            } else {\n                // This is not in the context of a channel\n                // Channel data is conversation data, which is saved automatically by bot framework SDK\n            }\n        }\n    }\n\n}\n"],"sourceRoot":"/app/build"}