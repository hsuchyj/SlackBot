{"version":3,"sources":["../src/utils/deprecated/MultiWaterfallDialog.ts"],"names":[],"mappings":"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","file":"MultiWaterfallDialog.js","sourcesContent":["import * as builder from \"botbuilder\";\nimport { BaseDialog } from \"./BaseDialog\";\nimport { MultiTriggerActionDialogEntry } from \"./../DialogUtils\";\n\n// To extend this class - in the constructor of the new dialog the developer needs\n// to set this.matchesList and then call DialogUtils.addMatches(this.matchesList, this);\nexport abstract class MultiWaterfallDialog extends BaseDialog {\n    constructor(\n        protected dialogId: string,\n        protected multiTriggerActionDialogEntryList: MultiTriggerActionDialogEntry[],\n    ) {\n        super(dialogId, {});\n\n        let resultList = [];\n        if (multiTriggerActionDialogEntryList !== null) {\n            for (let i = 0; i < multiTriggerActionDialogEntryList.length; i++) {\n                let newActionList = [];\n                newActionList.push((session, args, next) => { this.setDialogIdAsCurrent(session, args, next); });\n                newActionList.push((session, args, next) => {\n                    // tslint:disable-next-line:no-shadowed-variable\n                    this.onDefault((session, args, next) => { this._onDefault(session, args, next); });\n                    next(args);\n                });\n                if (Array.isArray(multiTriggerActionDialogEntryList[i].action)) {\n                    newActionList = newActionList.concat((multiTriggerActionDialogEntryList[i].action as builder.IDialogWaterfallStep[]));\n                } else {\n                    newActionList.push((multiTriggerActionDialogEntryList[i].action as builder.IDialogWaterfallStep));\n                }\n\n                let temp = {\n                    match: multiTriggerActionDialogEntryList[i].match,\n                    action: newActionList,\n                };\n\n                resultList.push(temp);\n            }\n\n            this.multiTriggerActionDialogEntryList = resultList;\n        }\n    }\n\n    public getMatchActionPairList(): MultiTriggerActionDialogEntry[] {\n        let nonNullList = this.multiTriggerActionDialogEntryList;\n        if (nonNullList === null || nonNullList === undefined) {\n            nonNullList = [];\n        }\n        return nonNullList;\n    }\n\n    public addMatchesToDialog(parentDialog: builder.IntentDialog): void {\n        let matchActionPairList = this.getMatchActionPairList();\n        if (matchActionPairList === null) {\n            return;\n        }\n        for (let i = 0; i < matchActionPairList.length; i++) {\n            if (Array.isArray(matchActionPairList[i].match)) {\n                parentDialog.matchesAny((matchActionPairList[i].match as string[] | RegExp[]), matchActionPairList[i].action);\n            } else {\n                parentDialog.matches((matchActionPairList[i].match as string | RegExp), matchActionPairList[i].action);\n            }\n        }\n    }\n\n    protected _onBegin(session: builder.Session, args: any, next: (args?: builder.IDialogResult<any>) => void): void {\n        let matchActionPairList = this.getMatchActionPairList();\n\n        let desiredIntent = args ? args.desiredIntent : null;\n        let foundIntent = false;\n        if (desiredIntent !== null && desiredIntent !== undefined) {\n            for (let i = 0; i < matchActionPairList.length; i++) {\n                let match = matchActionPairList[i].match;\n                if (Array.isArray(match)) {\n                    let currMatches = (match as RegExp[] | string[]);\n                    for (let j = 0; j < currMatches.length; j++) {\n                        if (currMatches[j] === desiredIntent) {\n                            session.userData.args = args;\n                            this.onDefault(matchActionPairList[i].action);\n                            foundIntent = true;\n                            break;\n                        }\n                    }\n                } else {\n                    let currMatch = (match as RegExp | string);\n                    if (currMatch === desiredIntent) {\n                        session.userData.args = args;\n                        this.onDefault(matchActionPairList[i].action);\n                        foundIntent = true;\n                    }\n                }\n                if (foundIntent) {\n                    break;\n                }\n            }\n        }\n        if (!foundIntent) {\n            console.log(\"ERROR: desiredIntent, \" + desiredIntent + \", for dialog, \" + this.dialogId + \", could not be located in the matchActionPairList.\");\n            // tslint:disable-next-line:no-shadowed-variable\n            this.onDefault((session, args, next) => { this._onDefault(session, args, next); });\n        }\n\n        next(args);\n    }\n\n    private async setDialogIdAsCurrent(session: builder.Session, args?: any | builder.IDialogResult<any>, next?: (args?: builder.IDialogResult<any>) => void): Promise<void> {\n        session.conversationData.currentDialogName = this.dialogId;\n        next(args);\n    }\n}\n"],"sourceRoot":"/app/build"}